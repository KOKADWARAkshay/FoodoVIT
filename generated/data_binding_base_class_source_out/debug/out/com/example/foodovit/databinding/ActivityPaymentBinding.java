// Generated by view binder compiler. Do not edit!
package com.example.foodovit.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.foodovit.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPaymentBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText amountEt;

  @NonNull
  public final Button button3;

  @NonNull
  public final EditText name;

  @NonNull
  public final EditText note;

  @NonNull
  public final Button send;

  @NonNull
  public final EditText upiId;

  private ActivityPaymentBinding(@NonNull LinearLayout rootView, @NonNull EditText amountEt,
      @NonNull Button button3, @NonNull EditText name, @NonNull EditText note, @NonNull Button send,
      @NonNull EditText upiId) {
    this.rootView = rootView;
    this.amountEt = amountEt;
    this.button3 = button3;
    this.name = name;
    this.note = note;
    this.send = send;
    this.upiId = upiId;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPaymentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPaymentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_payment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPaymentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.amount_et;
      EditText amountEt = rootView.findViewById(id);
      if (amountEt == null) {
        break missingId;
      }

      id = R.id.button3;
      Button button3 = rootView.findViewById(id);
      if (button3 == null) {
        break missingId;
      }

      id = R.id.name;
      EditText name = rootView.findViewById(id);
      if (name == null) {
        break missingId;
      }

      id = R.id.note;
      EditText note = rootView.findViewById(id);
      if (note == null) {
        break missingId;
      }

      id = R.id.send;
      Button send = rootView.findViewById(id);
      if (send == null) {
        break missingId;
      }

      id = R.id.upi_id;
      EditText upiId = rootView.findViewById(id);
      if (upiId == null) {
        break missingId;
      }

      return new ActivityPaymentBinding((LinearLayout) rootView, amountEt, button3, name, note,
          send, upiId);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
